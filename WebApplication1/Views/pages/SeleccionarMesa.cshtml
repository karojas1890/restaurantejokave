@model List<Mesa>
@{
    Layout = null;
}

<!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Seleccionar Mesa - JOKAVE</title>
    <link rel="stylesheet" href="~/css/SeleccionarMesa.css"/>
</head>
<body>
    <div class="header">
        <div class="logo">
            <div class="logo-icon">🍕</div>
            <div class="logo-text">PIZZERIA<br>JOKAVE</div>
        </div>
        <button class="close-btn">X</button>
        <h1>Seleccionar mesa</h1>

        <div class="search-container">
            <input type="text" class="search-input" placeholder="Buscar una mesa...">
            <button class="search-btn">🔍</button>
        </div>
    </div>

    <div class="legend">
        <div class="legend-item">
            <div class="legend-color disponible"></div>
            <span>Disponible</span>
        </div>
        <div class="legend-item">
            <div class="legend-color esperando-orden"></div>
            <span>Esperando orden</span>
        </div>
        <div class="legend-item">
            <div class="legend-color esperando-comida"></div>
            <span>Esperando comida</span>
        </div>
        <div class="legend-item">
            <div class="legend-color incidente"></div>
            <span>Incidente</span>
        </div>
        <div class="legend-item">
            <div class="legend-color comiendo"></div>
            <span>Comiendo</span>
        </div>
        <div class="legend-item">
            <div class="legend-color esperando-cuenta"></div>
            <span>Esperando cuenta</span>
        </div>
        <div class="legend-item">
            <div class="legend-color limpieza"></div>
            <span>Limpieza</span>
        </div>
        <div class="legend-item">
            <div class="legend-color reservada"></div>
            <span>Reservada</span>
        </div>
    </div>

    <div class="tables-container">
        <div class="tables-grid-wrapper">

            <button id="btnAnterior" class="nav-btn left" disabled>&larr; Anterior</button>

            <div class="tables-grid">
                @{
                    int mesasPorGrupo = 6;
                    int totalMesas = Model.Count;
                    int totalGrupos = (int)Math.Ceiling((double)totalMesas / mesasPorGrupo);
                }

                @for (int grupoId = 0; grupoId < totalGrupos; grupoId++)
                {
                    <div class="mesa-grupo @(grupoId == 0 ? "activo" : "")" data-grupo="@grupoId">
                        @foreach (var mesa in Model.Skip(grupoId * mesasPorGrupo).Take(mesasPorGrupo))
                        {
                            <div class="table-card" data-mesa-id="@mesa.IdMesa">
                                <div class="table-header">
                                    <div class="table-number">Mesa @mesa.IdMesa</div>
                                    <div class="table-capacity">@mesa.Sillas.Count() silla(s)</div>
                                </div>
                                <div class="table-visual">
                                    <div class="table-representation">
                                        <div class="table-center @(mesa.Estado == 1 ? "disponible" : "ocupada")"></div>

                                        @{
                                            int index = 0;
                                            var totalSillas = mesa.Sillas.Count;
                                            var radio = 55;
                                            var centro = 70;
                                        }

                                        @foreach (var silla in mesa.Sillas)
                                        {
                                            var angulo = (360.0 / totalSillas) * index;
                                            var radianes = angulo * Math.PI / 180.0;
                                            var x = (int)(centro + radio * Math.Cos(radianes) - 9);
                                            var y = (int)(centro + radio * Math.Sin(radianes) - 9);

                                            <div class="chair @(silla.Estado == 1 ? "disponible" : "ocupada")"
                                                 data-silla-id="@silla.IdSilla"
                                                 style="left:@($"{x}px"); top:@($"{y}px");"
                                                 oncontextmenu="seleccionarSilla(event, @silla.IdSilla)">
                                            </div>

                                            index++;
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>

            <button id="btnSiguiente" class="nav-btn right">Siguiente &rarr;</button>
        </div>

        <button class="exit-button">Ir a sala de espera</button>
    </div>
    <script>
        let grupoActual = 0;
        const grupos = document.querySelectorAll('.mesa-grupo');
        const btnAnterior = document.getElementById('btnAnterior');
        const btnSiguiente = document.getElementById('btnSiguiente');

        function cambiarGrupo(direccion) {
            grupos[grupoActual].classList.remove('activo');
            grupoActual += direccion;

            if (grupoActual < 0) grupoActual = 0;
            if (grupoActual >= grupos.length) grupoActual = grupos.length - 1;

            grupos[grupoActual].classList.add('activo');

            btnAnterior.disabled = grupoActual === 0;
            btnSiguiente.disabled = grupoActual === grupos.length - 1;
        }

        btnAnterior.addEventListener('click', () => cambiarGrupo(-1));
        btnSiguiente.addEventListener('click', () => cambiarGrupo(1));

        // Inicializa estados de botones al cargar la página
        btnAnterior.disabled = true;
        if (grupos.length <= 1) btnSiguiente.disabled = true;
    </script>
    <script src="~/js/Seleccionarmesa.js"></script>
</body>
</html>
